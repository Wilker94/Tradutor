import os
import tkinter as tk
from tkinter import messagebox
from elevenlabs import save, Voice, VoiceSettings
from elevenlabs.client import *

# be00df312290494f3d432b0af6f9bc6c
# Oi, tudo bem com você? Baixe, e aproveite! É grátis.

# Função para converter texto para áudio utilizando Eleven Labs e salvar no desktop
def eleven(api, texto, save_filename, voice_name="James"):
    
    
    if not api:
        print("Por favor, insira a API do Elevenlabs.")
        return

    
    client = ElevenLabs(api_key=api)
    
    

    # Escolhe a voz baseada no nome fornecido
    voice = None
    voices = client.voices.get_all()
    for voz in voices.voices:
        if voice_name in voz.name:
            voice = voz.voice_id
            break

    if not voice:
        print(f"Voz '{voice_name}' não encontrada.")
        return

    # Configurações opcionais
    stability = 0.5
    similarity_boost = 0.8
    style = 0
    boost = True

    # Configurações opcionais original
    #stability = 0.35
    #similarity_boost = 0.4
    #style = 0.55
    #boost = False

    # Gera o áudio com a API do Eleven Labs
    audio = client.generate(
        text=texto,
        voice=Voice(voice_id=voice,
                    settings=VoiceSettings(stability=stability,
                                           similarity_boost=similarity_boost,
                                           style=style,
                                           use_speaker_boost=boost)),
        model='eleven_multilingual_v2'
    )

    # Salva o áudio em um arquivo com o nome fornecido
    desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
    audios_folder = os.path.join(desktop_path, "idiomas")  # Pasta "idiomas" mencionada
    os.makedirs(audios_folder, exist_ok=True)
    filename = os.path.join(audios_folder, save_filename)

    save(audio=audio, filename=filename)
    print(f"Áudio salvo com sucesso como {filename}")
    
    
"""def criar_pasta_idiomas():
    desktop_path = os.path.join(os.path.expanduser('~'), 'Desktop')
    idiomas_path = os.path.join(desktop_path, 'idiomas')
    if not os.path.exists(idiomas_path):
        os.makedirs(idiomas_path)
    return idiomas_path    """
      
    
    

# Função para baixar arquivos de áudio com base nos idiomas selecionados
"""def baixar_audio(api, pt):
    # Verifica se foi fornecida uma API válida
    if not api:
        print("Por favor, insira a API do Elevenlabs.")
        return

    idiomas_path = criar_pasta_idiomas()
    
    convert_text_to_audio(api_key=api, text=pt, save_filename="portuguese.mp3")"""
    
def baixa_audio(api_input, translate_portugues, translate_portugues_text, translate_portugues_label,
                translate_ingles, translate_ingles_text, translate_ingles_label,
                translate_espanhol, translate_espanhol_text, translate_espanhol_label,
                translate_alemao, translate_alemao_text, translate_alemao_label,
                translate_frances, translate_frances_text, translate_frances_label,
                translate_italiano, translate_italiano_text, translate_italiano_label,
                translate_arabe, translate_arabe_text, translate_arabe_label,
                translate_holandes, translate_holandes_text, translate_holandes_label,
                translate_polones, translate_polones_text, translate_polones_label,
                translate_bulgaro, translate_bulgaro_text, translate_bulgaro_label,
                translate_croata, translate_croata_text, translate_croata_label,
                translate_esloveno, translate_esloveno_text, translate_esloveno_label,
                translate_eslovaco, translate_eslovaco_text, translate_eslovaco_label,
                translate_filipino, translate_filipino_text, translate_filipino_label,
                translate_grego, translate_grego_text, translate_grego_label,
                translate_urdu, translate_urdu_text, translate_urdu_label,
                translate_lituano, translate_lituano_text, translate_lituano_label,
                translate_tailandes, translate_tailandes_text, translate_tailandes_label,
                translate_hindi, translate_hindi_text, translate_hindi_label,
                translate_vietnam, translate_vietnam_text, translate_vietnam_label,
                translate_bengali, translate_bengali_text, translate_bengali_label,
                translate_hungaro, translate_hungaro_text, translate_hungaro_label,
                translate_indonesio, translate_indonesio_text, translate_indonesio_label,
                translate_sueco, translate_sueco_text, translate_sueco_label,
                translate_servio, translate_servio_text, translate_servio_label,
                translate_tcheco, translate_tcheco_text, translate_tcheco_label,
                translate_romeno, translate_romeno_text, translate_romeno_label,
                translate_turco, translate_turco_text, translate_turco_label,
                translate_russo, translate_russo_text, translate_russo_label,
                translate_ucraniano, translate_ucraniano_text, translate_ucraniano_label,
                translate_malaio, translate_malaio_text, translate_malaio_label):
        
        api = api_input.get("1.0", tk.END).strip()  # Obtém o texto digitado na ScrolledText
        resposta = messagebox.askquestion("Confirmação", "Deseja realmente baixar Áudios?")
        if resposta == "yes":      
            if translate_portugues.get():
                text_portugues = translate_portugues_text.cget("text")
                save_filename = translate_portugues_label.cget("text").strip() + ".mp3"  # Obtém o texto do Label em extensão mp3 no final
                eleven(api,text_portugues, save_filename)
           
            if translate_ingles.get():
                text_ingles = translate_ingles_text.cget("text")
                save_filename = translate_ingles_label.cget("text").strip() + ".mp3"  # Obtém o texto do Label em extensão mp3 no final
                eleven(api,text_ingles, save_filename)
                
            if translate_espanhol.get():
                text_espanhol = translate_espanhol_text.cget("text")
                save_filename = translate_espanhol_label.cget("text").strip() + ".mp3"
                eleven(api, text_espanhol, save_filename)

            if translate_frances.get():
                text_frances = translate_frances_text.cget("text")
                save_filename = translate_frances_label.cget("text").strip() + ".mp3"
                eleven(api, text_frances, save_filename)

            if translate_alemao.get():
                text_alemao = translate_alemao_text.cget("text")
                save_filename = translate_alemao_label.cget("text").strip() + ".mp3"
                eleven(api, text_alemao, save_filename)

            if translate_italiano.get():
                text_italiano = translate_italiano_text.cget("text")
                save_filename = translate_italiano_label.cget("text").strip() + ".mp3"
                eleven(api, text_italiano, save_filename)

            if translate_arabe.get():
                text_arabe = translate_arabe_text.cget("text")
                save_filename = translate_arabe_label.cget("text").strip() + ".mp3"
                eleven(api, text_arabe, save_filename)

            if translate_holandes.get():
                text_holandes = translate_holandes_text.cget("text")
                save_filename = translate_holandes_label.cget("text").strip() + ".mp3"
                eleven(api, text_holandes, save_filename)

            if translate_polones.get():
                text_polones = translate_polones_text.cget("text")
                save_filename = translate_polones_label.cget("text").strip() + ".mp3"
                eleven(api, text_polones, save_filename)

            if translate_bulgaro.get():
                text_bulgaro = translate_bulgaro_text.cget("text")
                save_filename = translate_bulgaro_label.cget("text").strip() + ".mp3"
                eleven(api, text_bulgaro, save_filename)

            if translate_croata.get():
                text_croata = translate_croata_text.cget("text")
                save_filename = translate_croata_label.cget("text").strip() + ".mp3"
                eleven(api, text_croata, save_filename)

            if translate_esloveno.get():
                text_esloveno = translate_esloveno_text.cget("text")
                save_filename = translate_esloveno_label.cget("text").strip() + ".mp3"
                eleven(api, text_esloveno, save_filename)
                
            if translate_eslovaco.get():
                text_eslovaco = translate_eslovaco_text.cget("text")
                save_filename = translate_eslovaco_label.cget("text").strip() + ".mp3"
                eleven(api, text_eslovaco, save_filename)
            
            if translate_filipino.get():
                text_filipino = translate_filipino_text.cget("text")
                save_filename = translate_filipino_label.cget("text").strip() + ".mp3"
                eleven(api, text_filipino, save_filename)
            
            if translate_grego.get():
                text_grego = translate_grego_text.cget("text")
                save_filename = translate_grego_label.cget("text").strip() + ".mp3"
                eleven(api, text_grego, save_filename)
            
            """if translate_hebraico.get():
                text_hebraico = translate_hebraico_text.cget("text")
                save_filename = translate_hebraico_label.cget("text").strip() + ".mp3"
                eleven(api, text_hebraico, save_filename)"""
            
            if translate_urdu.get():
                text_urdu = translate_urdu_text.cget("text")
                save_filename = translate_urdu_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_urdu, save_filename)
                
            if translate_lituano.get():
                text_lituano = translate_lituano_text.cget("text")
                save_filename = translate_lituano_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_lituano, save_filename)
            
            if translate_tailandes.get():
                text_tailandes = translate_tailandes_text.cget("text")
                save_filename = translate_tailandes_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_tailandes, save_filename)
                
            if translate_hindi.get():
                text_hindi = translate_hindi_text.cget("text")
                save_filename = translate_hindi_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_hindi, save_filename)
            
            # Acrescentando os novos idiomas
            """if translate_chines.get():
                text_chines = translate_chines_text.cget("text")
                save_filename = translate_chines_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_chines, save_filename)"""
            
            if translate_vietnam.get():
                text_vietnam = translate_vietnam_text.cget("text")
                save_filename = translate_vietnam_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_vietnam, save_filename)
            
            if translate_bengali.get():
                text_bengali = translate_bengali_text.cget("text")
                save_filename = translate_bengali_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_bengali, save_filename)
            
            if translate_hungaro.get():
                text_hungaro = translate_hungaro_text.cget("text")
                save_filename = translate_hungaro_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_hungaro, save_filename)
            
            if translate_indonesio.get():
                text_indonesio = translate_indonesio_text.cget("text")
                save_filename = translate_indonesio_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_indonesio, save_filename)
            
            if translate_sueco.get():
                text_sueco = translate_sueco_text.cget("text")
                save_filename = translate_sueco_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_sueco, save_filename)
            
            if translate_servio.get():
                text_servio = translate_servio_text.cget("text")
                save_filename = translate_servio_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_servio, save_filename)
            
            if translate_tcheco.get():
                text_tcheco = translate_tcheco_text.cget("text")
                save_filename = translate_tcheco_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_tcheco, save_filename)
            
            if translate_romeno.get():
                text_romeno = translate_romeno_text.cget("text")
                save_filename = translate_romeno_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_romeno, save_filename)
            
            if translate_turco.get():
                text_turco = translate_turco_text.cget("text")
                save_filename = translate_turco_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_turco, save_filename)
            
            if translate_russo.get():
                text_russo = translate_russo_text.cget("text")
                save_filename = translate_russo_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_russo, save_filename)
            
            if translate_ucraniano.get():
                text_ucraniano = translate_ucraniano_text.cget("text")
                save_filename = translate_ucraniano_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_ucraniano, save_filename)
            
            if translate_malaio.get():
                text_malaio = translate_malaio_text.cget("text")
                save_filename = translate_malaio_label.cget("text").strip() + ".mp3"
                eleven(api_input, text_malaio, save_filename)
            

            


           
           #print(text_portugues, text_ingles)
        else:
            # Caso o usuário clique em "Não", você pode optar por não fazer nada ou exibir uma mensagem
            print("Operação cancelada pelo usuário")

